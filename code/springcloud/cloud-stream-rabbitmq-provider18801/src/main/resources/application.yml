server:
  port: 18801


spring:
  application:
    name: cloud-stream-provider  # 在Eureka中入注的服务名
  cloud:
    stream:
      binders: # 在此处配置要绑定的rabbitmq的服务信息
        defaultRabbit: # 表示定义的名称，用于binding整合
          type: rabbit # 消息组件类型
          environment: # 设置rabbitmq的相关的环境配置
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: guest
                password: guest
      bindings: # 服务的整合处理   (注意bindings是一个集合，所以在output前添加 “-”)
        - output: # 这个名字是一个通道的名称
            destination: studyExchange # 表示要使用的Exchange名称定义
            content-type: application/json # 设置消费类型，本次为json，文本则设置为“test/plain”
            binder: defaultRabbit  # 设置要绑定的消息服务的具体配置


eureka:
  client:
    # 表示是否将自己注册EurekaServer默认为true
    register-with-eureka: true
    # 是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      # 设置与 Eureka Server 交互的地址，查询服务 和 注册服务都依赖这个地址
       defaultZone: http://localhost:17001/eureka/     # 单体版
#      defaultZone: http://localhost:17001/eureka/,http://eureka17002.com:17002/eureka/     #集群版
  instance:
    instance-id: cloud-stream-provider # 再Eureka注册中心显示主机名
    prefer-ip-address: true # 暴露主机地址
  #    # Eureka客户端向服务端发送心跳的时间间隔，单位为秒（默认是30秒）
  #    lease-renewal-interval-in-seconds: 1
  #    # Eureka服务端在收到最后一次心跳后等待时间上线，单位是秒（默认是90秒），超时将剔除服务
  #    lease-expiration-duration-in-seconds: 2

## rabbitmq相关配置，暴露bus刷新配置的端点
management:
  endpoints:  # 暴露bus刷新配置的端点
    web:
      exposure:
        include: 'bus-refresh'











