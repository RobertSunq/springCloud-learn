server:
  port: 18002


spring:
  application:
    name: cloud-provider-service  # 在Eureka中入注的服务名
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource        #当前数据源操作类型
    driver-class-name: org.gjt.mm.mysql.Driver            #mysql驱动包
    url: jdbc:mysql://localhost:3306/springcloud_dev?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: springcloud
    password: 123456
    # 创建数据库：create database springcloud_dev DEFAULT CHARACTER SET utf8;
    # 创建新用户：create user 'springcloud' identified by '123456';
    # 赋予该用户对该数据库的所有权限，并刷新：grant all on springcloud_dev.* to 'springcloud';flush privileges;
    # 新建数据库并直接赋予权限：
                        # grant all on springcloud_dev.* TO 'springcloud'@'%' IDENTIFIED BY '123456'; flush privileges;


eureka:
  client:
    # 表示是否将自己注册EurekaServer默认为true
    register-with-eureka: true
    # 是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      # 设置与 Eureka Server 交互的地址，查询服务 和 注册服务都依赖这个地址
      # defaultZone: http://localhost:17001/eureka/     # 单体版
      defaultZone: http://localhost:17001/eureka/,http://eureka17002.com:17002/eureka/     #集群版


mybatis:
  mapperLocations: classpath:mapper/*.xml
  type-aliases-package: com.qing.springcloud.entities #所有Entity别名类所在包










